{"version":3,"sources":["Circle.js","assets/sounds/startSound.mp3","assets/sounds/endSound1.wav","GameOver.js","circles.js","assets/sounds/click.wav","App.js","index.js"],"names":["Circle","props","style","backgroundColor","color","pointerEvents","disabled","className","active","onClick","click","GameOver","close","score","circles","id","gameStartSound","Audio","startSound","gameEndSound","endSound","clickSound","getRndInteger","min","max","Math","floor","random","App","state","current","gameOver","pace","rounds","gameStart","gameEnd","timer","undefined","clickPlay","paused","play","currentTime","clickHandler","console","log","setState","stopHandler","nextCircle","nextActive","setTimeout","startHandler","pause","clearTimeout","closeHandler","this","map","c","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c0eb3c0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Circle = (props) => {\n  return (\n    <div\n      style={{\n        backgroundColor: props.color,\n        pointerEvents: props.disabled ? \"auto\" : \"none\",\n      }}\n      className={`circle ${props.active ? \"active\" : \"\"}`}\n      onClick={props.click}\n    >\n      {/* <p> {props.id}</p> */}\n    </div>\n  );\n};\n\nexport default Circle;\n","export default __webpack_public_path__ + \"static/media/startSound.3b66db1e.mp3\";","export default __webpack_public_path__ + \"static/media/endSound1.0242c96f.wav\";","import React from \"react\";\n\nconst GameOver = (props) => {\n  return (\n    <div className=\"overlay\">\n      <div className=\"popup\">\n        <button className=\"close_btn\" onClick={props.close}>\n          X\n        </button>\n        <h2>GAME OVER</h2>\n        <p> Score was: {props.score} </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","export const circles = [\n  { id: 1, color: \"#625344\" },\n  { id: 2, color: \"#ff3300\" },\n  { id: 3, color: \"#FA8072\" },\n  { id: 4, color: \"#123456\" },\n];\n","export default __webpack_public_path__ + \"static/media/click.ac43ddc9.wav\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Circle from \"./Circle\";\nimport startSound from \"./assets/sounds/startSound.mp3\";\nimport endSound from \"./assets/sounds/endSound1.wav\";\nimport GameOver from \"./GameOver\";\nimport { circles } from \"./circles\";\nimport click from \"./assets/sounds/click.wav\";\n\nlet gameStartSound = new Audio(startSound);\nlet gameEndSound = new Audio(endSound);\n\nlet clickSound = new Audio(click);\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    gameOver: false,\n    pace: 1500,\n    rounds: 0,\n    gameStart: false,\n    gameEnd: false,\n  };\n\n  timer = undefined;\n  clickPlay = () => {\n    if (clickSound.paused) {\n      clickSound.play();\n    } else {\n      clickSound.currentTime = 0;\n    }\n  };\n\n  clickHandler = (id) => {\n    //binding data with the event\n    console.log(\"you clicked: \", id);\n\n    if (this.state.current !== id) {\n      //Check if the circle id is the one I clicked\n      this.stopHandler();\n      return; //stops anythinng from continuing\n    }\n\n    this.setState({\n      score: this.state.score + 10,\n      rounds: 0,\n    });\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.stopHandler();\n      return; //stops anythinng from continuing\n    }\n    let nextActive;\n\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      pace: this.state.pace * 0.95,\n      rounds: this.state.rounds + 1,\n    });\n\n    this.timer = setTimeout(this.nextCircle, this.state.pace);\n\n    console.log(\"active circle is \", this.state.current);\n    console.log(\"Round number \", this.state.rounds);\n  };\n\n  startHandler = () => {\n    gameStartSound.play();\n    this.nextCircle();\n    this.setState({ gameStart: true });\n  };\n\n  stopHandler = () => {\n    gameStartSound.pause();\n    gameEndSound.play();\n    clearTimeout(this.timer);\n    // this.setState({ gameEnd: true });\n\n    this.setState({\n      gameOver: true,\n      current: 0,\n      gameStart: false,\n      gameEnd: false,\n    });\n  };\n\n  closeHandler = () => {\n    this.setState({\n      gameOver: false,\n      score: 0,\n      pace: 1500,\n      rounds: 0,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.gameOver && (\n          <GameOver score={this.state.score} close={this.closeHandler} />\n        )}\n        <h1>Catch ME if you CAN!</h1>\n        <p>Your score: {this.state.score}</p>\n        <div className=\"circles\">\n          {circles.map((c) => (\n            <Circle\n              key={c.id}\n              color={c.color}\n              id={c.id}\n              //Binding anonymous functionsthe data which circle we are clicking\n              click={() => this.clickHandler(c.id)}\n              active={this.state.current === c.id}\n              disabled={this.state.gameStart}\n            />\n          ))}\n        </div>\n        <div>\n          <button disabled={this.state.gameStart} onClick={this.startHandler}>\n            Start\n          </button>\n          <button disabled={this.state.gameEnd} onClick={this.stopHandler}>\n            Stop\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}